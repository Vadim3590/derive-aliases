//! Documentation for Derive Aliases @generated by the `derive_aliases` crate
//!
//! Derive aliases are defined in `derive_aliases.rs`, in the same directory
//! as the crate's `Cargo.toml`
#![allow(warnings)]
#![doc(hidden)]

/// Derive alias `..Copy` can be used like this:
///
/// ```ignore
/// #[derive(..Copy)]
/// struct Example;
/// ```
///
/// Which expands to the following:
///
/// ```ignore
/// #[derive(Copy, Clone)]
/// struct Example;
/// ```
pub trait Copy {}

/// Derive alias `..Eq` can be used like this:
///
/// ```ignore
/// #[derive(..Eq)]
/// struct Example;
/// ```
///
/// Which expands to the following:
///
/// ```ignore
/// #[derive(PartialEq, Eq)]
/// struct Example;
/// ```
pub trait Eq {}

/// Derive alias `..Ord` can be used like this:
///
/// ```ignore
/// #[derive(..Ord)]
/// struct Example;
/// ```
///
/// Which expands to the following:
///
/// ```ignore
/// #[derive(PartialOrd, Ord, PartialEq, Eq)]
/// struct Example;
/// ```
pub trait Ord {}

/// Derive alias `..Together` can be used like this:
///
/// ```ignore
/// #[derive(..Together)]
/// struct Example;
/// ```
///
/// Which expands to the following:
///
/// ```ignore
/// #[derive(PartialOrd, std::hash::Hash)]
/// struct Example;
/// ```
pub trait Together {}
